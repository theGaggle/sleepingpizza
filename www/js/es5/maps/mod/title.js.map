{"version":3,"sources":["mod/title.js"],"names":["System","register","_export","_context","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","override","parent","method","upgrade","orig","_len2","arguments","length","args","Array","_key2","call","apply","this","concat","_templateObject","main","etc","lang","state","auth","$authName","setters","execute","require","ident","$name","after","common","parseHTML","mod","title","$","oneeSama","hook","el","checked","classList","add","append","document","createTextNode","hotConfig","get","change","request","posts","posting","ComposerView","prototype","_len","_key","msg"],"mappings":"AAAA,YAAaA,QAAOC,YAAY,SAASC,EAAQC,GAAiE,QAASC,GAAuBC,EAAQC,GAAK,MAAOC,QAAOC,OAAOD,OAAOE,iBAAiBJ,GAASC,KAAKI,MAAMH,OAAOC,OAAOF,OAAU,QAASK,GAASC,EAAOC,EAAOC,GAAS,GAAIC,GAAKH,EAAOC,EAAQD,GAAOC,GAAQ,WAAW,IAAI,GAAIG,GAAMC,UAAUC,OAwC5UC,EAAAC,MAAAJ,GAAAK,EAAA,EAAAL,EAAAK,EAAAA,IAAAF,EAAAE,GAAAJ,UAAAI,EAAA,OAAAP,GAAAQ,KAAAC,MAAAT,GAAAU,KAAAT,GAAAU,OAAAN,KAxC4B,GAAIO,GAAgBC,EAAKC,EAAIC,EAAKC,EAAMC,EAAKC,CAwCzE,QAAAC,WAAAC,QAAA,WAAAR,EAAAtB,GAAA,iBAAA,+DAAA,iBAAA,iBAAA,+DAAA,iBAAAuB,EAAAQ,QAAA,QAAAP,EAAAD,EAAAC,IAAAC,EAAAF,EAAAE,KAAAC,EAAAH,EAAAG,MAAAC,EAAAJ,EAAAS,MAAAL,KAAAJ,EAAAU,MAAAC,MAAAX,EAAAY,OAAAC,UAAAd,EAAAG,EAAAY,IAAAC,MAAA,GAAAb,EAAAY,IAAAC,MAAA,KAAAV,EAAAL,EAAAgB,EAAA,aAAAhB,EAAAiB,SAAAC,KAAA,aAAA,SAAAC,GAAA,GAAAC,GAAAf,EAAA,GAAAe,OAAAA,KAAAD,EAAAE,UAAAC,IAAA,UAAAlB,EAAA,QAAA,aAAAe,EAAAI,OAAAC,SAAAC,eAAA,OAAAtB,EAAAuB,UAAAC,IAAA,iBAAAvB,QAAAC,EAAAuB,OAAA,WAAA,MAAA5B,GAAA6B,QAAA,wBAAA7C,EAAAgB,EAAA8B,MAAAC,QAAAC,aAAAC,UAAA,oBAAA,SAAA7C,GAAA,IAAA,GAAA8C,GAAA5C,UAAAC,OAVXC,EAAAC,MAAAyC,EAAA,EAAAA,EAAA,EAAA,GAAAC,EAAA,EAAAD,EAAAC,EAAAA,IAAA3C,EAAA2C,EAAA,GAAA7C,UAAA6C,EAAA,IAAAC,GAAAhD,EAAAO,KAAAC,MAAAR,GAAAS,MAAAC,OAAAN,GAAA,OAAAa,GAAA,GAAAe,UAAAgB,EAAAhC,KAAAA,GAAAgC","file":"mod/title.js","sourcesContent":["/*\nToggle and preview staff titles on new posts\n */\n\nconst main = require('main'),\n\t{etc, lang, state} = main,\n\t{auth} = main.ident;\n\n// Insert toggler checkbox into name form\nmain.$name.after(main.common.parseHTML\n\t`<label title=\"${lang.mod.title[1]}\" class=\"mod\">\n\t\t<input type=\"checkbox\" id=\"authName\">\n\t\t ${lang.mod.title[0]}\n\t </label>`);\n\nconst $authName = main.$('#authName');\n\n// Preview the title in postForm\nmain.oneeSama.hook('fillMyName', el => {\n\tconst checked = $authName[0].checked;\n\tif (checked) {\n\t\tel.classList.add(auth === 'admin' ? 'admin' : 'moderator');\n\t\tel.append(document.createTextNode(' ## '\n\t\t\t+ state.hotConfig.get('staff_aliases')[auth]));\n\t}\n});\n$authName.change(() => main.request('postForm:indentity'));\n\n// Extend default allocation request\noverride(main.posts.posting.ComposerView.prototype, 'allocationMessage',\n\tfunction (orig, ...args) {\n\t\tconst msg = orig.call(this, ...args);\n\t\tif ($authName[0].checked)\n\t\t\tmsg.auth = auth;\n\t\treturn msg;\n\t});\n\n// Override a method on an object with a new method\nfunction override(parent, method, upgrade) {\n\tconst orig = parent[method];\n\tparent[method] = function (...args) {\n\t\treturn upgrade.call(this, orig, ...args);\n\t}\n}\n"],"sourceRoot":"/source/"}