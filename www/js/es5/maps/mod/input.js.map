{"version":3,"sources":["mod/input.js"],"names":["System","register","_export","_context","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","_slicedToArray","_templateObject","_templateObject2","_templateObject3","_templateObject4","main","util","$","Backbone","common","lang","modals","parseHTML","InputBoxView","NotificationInputView","BanInputView","setters","execute","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","TypeError","require","View","extend","className","events","submit","initialize","this","type","render","html","renderInput","send","$el","prependTo","$toolbox","find","first","focus","event","preventDefault","values","target","each","checked","handler","kill","remove","size","placeholder","mod","placeholders","msg","NOTIFICATION","exports","notification","field","reason","_lang$mod$displayBan","displayBan","label","title","info","renderReasonPrompt","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","getSelected","num","BAN","concat","append","needReason","ban"],"mappings":"AAAA,YAAaA,QAAOC,YAAY,SAASC,EAAQC,GAAkM,QAASC,GAAmBC,GAAK,GAAGC,MAAMC,QAAQF,GAAK,CAAC,IAAI,GAAIG,GAAE,EAAEC,EAAKH,MAAMD,EAAIK,QAAQF,EAAEH,EAAIK,OAAOF,IAAIC,EAAKD,GAAGH,EAAIG,EAAG,OAAOC,GAAY,MAAOH,OAAMK,KAAKN,GAAO,QAASO,GAAuBC,EAAQC,GAAK,MAAOC,QAAOC,OAAOD,OAAOE,iBAAiBJ,GAASC,KAAKI,MAAMH,OAAOC,OAAOF,OAA3d,GAAIK,GAAeC,EAAgBC,EAAiBC,EAAiBC,EAAiBC,EAAKC,EAAKC,EAAEC,EAASC,EAAOC,EAAKC,EAAOC,EAAUC,EAAaC,EAAsBC,CAA0T,QAAQC,WAAWC,QAAQ,WAAWjB,EAAe,WAAW,QAASkB,GAAchC,EAAIG,GAAG,GAAI8B,MAAYC,GAAG,EAASC,GAAG,EAAUC,EAAGC,MAAU,KAAI,IAAI,GAA8BC,GAA1BC,EAAGvC,EAAIwC,OAAOC,cAAiBP,GAAII,EAAGC,EAAGG,QAAQC,QAAeV,EAAKW,KAAKN,EAAGzB,QAAUV,GAAG8B,EAAK5B,SAASF,GAAjD+B,GAAG,IAAwD,MAAMW,GAAKV,GAAG,EAAKC,EAAGS,EAAK,QAAS,KAAQX,GAAIK,EAAG,WAAUA,EAAG,YAAa,QAAS,GAAGJ,EAAG,KAAMC,IAAK,MAAOH,GAAM,MAAO,UAASjC,EAAIG,GAAG,GAAGF,MAAMC,QAAQF,GAAM,MAAOA,EAAU,IAAGwC,OAAOC,WAAY/B,QAAOV,GAAM,MAAOgC,GAAchC,EAAIG,EAAU,MAAM,IAAI2C,WAAU,4DAA+D/B,EAAgBR,GAAwB,eAAmB,qCAAyC,mBAAsB,eAAmB,qCAAyC,mBAAsBS,EAAiBT,GAAwB,UAAU,MAAM,UAAU,MAAMU,EAAiBV,GAAwB,UAAU,uCAA+C,kBAAqB,UAAU,uCAA+C,kBAAqBW,EAAiBX,GAAwB,wCAA6C,eAAmB,wCAA6C,eAAmBY,EAAK4B,QAAQ,QAAQ3B,EAAK2B,QAAQ,UAAU1B,EAAEF,EAAKE,EAAEC,EAASH,EAAKG,SAASC,EAAOJ,EAAKI,OAAOC,EAAKL,EAAKK,KAAKC,EAAON,EAAKM,OAAOC,EAAUH,EAAOG,UAAUC,EAAaL,EAAS0B,KAAKC,QAAQC,UAAU,eAAeC,QAAQC,OAAO,UAAUC,WAAW,WAAsB5B,EAAO6B,KAAKC,MAAMD,KAAKA,KAAKE,UAAWA,OAAO,WAAkB,GAAIC,GAAK/B,EAAUX,EAAgBuC,KAAKI,cAAclC,EAAKmC,KAAML,MAAKM,IAAIH,KAAKA,GAAMI,UAAU1C,EAAK2C,SAASF,KAAKG,KAAK,SAASC,QAAQC,SAAUb,OAAO,SAAgBc,GAAOA,EAAMC,gBAAiB,IAAIC,KAAU/C,GAAE6C,EAAMG,QAAQN,KAAK,uBAAuBO,KAAK,WAAWF,EAAOxB,KAAiB,aAAZU,KAAKC,KAAkBD,KAAKiB,QAAQjB,KAAKzC,SAAUyC,KAAKkB,QAAQJ,IAAUK,KAAK,iBAAuBhD,GAAO6B,KAAKC,MAAMD,KAAKoB,YAAa9C,EAAsBD,EAAasB,QAAQM,KAAK,eAAeG,YAAY,WAAuB,MAAOhC,GAAUV,GAAkBuC,KAAK,OAAOoB,KAAK,GAAGC,YAAYpD,EAAKqD,IAAIC,aAAaC,OAAQP,QAAQ,SAAiBO,GAAK5D,EAAKwC,MAAMpC,EAAOyD,aAAaD,EAAI,KAAKzB,KAAKmB,UAAWQ,QAAQC,aAAatD,EAAsBC,EAAaF,EAAasB,QAAQM,KAAK,MAAMG,YAAY,WAAuE,IAAI,GAAhDD,GAAK,GAAOxB,GAAM,OAAO,QAAQ,WAAmBM,EAAG,EAAEA,EAAGN,EAAK5B,OAAOkC,IA+Dx6F,CAA3C,GAAI4C,GAAAlD,EAAAM,EAAuCkB,IACvC/B,EAAAV,GACPuC,KAAM,SACNqB,YAAapD,EAAKqD,IAAIC,aAAaK,KAHW1B,GAAA/B,EAAAV,GAAAuC,KAAA,OAAAoB,KAAA,GAAAC,YAAApD,EAAAqD,IAAAC,aAAAM,QAAA,IAAAC,GAAAvE,EAAAU,EAAAqD,IAAAS,WAAA,GAAAC,EAAAF,EAAA,GAAAG,EAAAH,EAAA,EAAA,OAAA5B,IAAA/B,EAAAT,GAAAuE,MAAAA,GAAAD,IAAAf,QAAA,SAAAiB,GAAA,IAAAA,EAAA,GAAA,MAAAnC,MAAAoC,oBAAA,KAAA,GAAAvF,GAAA,EAAA,EAAAA,EAAAA,IAAAsF,EAAAtF,IAAAsF,EAAAtF,EAAAsF,GAAA,IAAAA,EAAA,EAAA,IAAAE,IAAA,EAAAC,GAAA,EAAAC,EAAAxD,MAAA,KAAA,IAAA,GA6BhCyD,GA7BgCC,EA6BhC3E,EAAK4E,cAALxD,OAAAC,cAAAkD,GAAAG,EAAAC,EAAArD,QAAAC,MAAAgD,GAAA,EAAA,CAAA,GAAAM,GAAAH,EAAAjF,KAAAM,GAAAwC,MAAApC,EAAA2E,IAAAD,GAAAE,OAAApG,EAAA0F,MAAA,MAAA5C,GAAA+C,GAAA,EAAAC,EAAAhD,EAAA,QAAA,KAAA8C,GAAAI,EAAAA,WAAAA,EAAAA,YAAA,QAAA,GAAAH,EAAA,KAAAC,IAAAvC,KAAAmB,QAAAiB,mBAAA,WAAApC,KAAAM,IAAAG,KAAA,iBAAAW,SAAApB,KAAAM,IAAAwC,OAAA1E,EAAAR,EAAAM,EAAAqD,IAAAwB,aAAAtC,KAAA,oBAAAE,WAAAgB,QAAAqB,IAAAzE","file":"mod/input.js","sourcesContent":["/*\nVarious input boxes\n */\n\nconst main = require('main'),\n\tutil = require('./util'),\n\t{$, Backbone, common, lang, modals} = main,\n\t{parseHTML} = common;\n\nconst InputBoxView = Backbone.View.extend({\n\tclassName: 'mod inputBox',\n\tevents: {\n\t\tsubmit: 'submit'\n\t},\n\tinitialize() {\n\t\tmodals[this.type] = this;\n\t\tthis.render();\n\t},\n\trender() {\n\t\tconst html = parseHTML\n\t\t\t`<form>\n\t\t\t\t${this.renderInput()}\n\t\t\t\t<input type=\"submit\" value=\"${lang.send}\">\n\t\t\t</form>`;\n\t\tthis.$el\n\t\t\t.html(html)\n\t\t\t.prependTo(main.$toolbox.$el)\n\t\t\t.find('input').first().focus();\n\t},\n\tsubmit(event) {\n\t\tevent.preventDefault();\n\t\tconst values = [];\n\t\t$(event.target).find('input[type!=submit]').each(function () {\n\t\t\tvalues.push(this.type === 'checkbox' ? this.checked : this.value);\n\t\t});\n\t\tthis.handler(values);\n\t},\n\tkill() {\n\t\tdelete modals[this.type];\n\t\tthis.remove();\n\t}\n});\n\nconst NotificationInputView = InputBoxView.extend({\n\ttype: 'notification',\n\trenderInput() {\n\t\treturn parseHTML `<input ${{\n\t\t\ttype: 'text',\n\t\t\tsize: 25,\n\t\t\tplaceholder: lang.mod.placeholders.msg\n\t\t}}>`;\n\t},\n\thandler(msg) {\n\t\tmain.send([common.NOTIFICATION, msg[0]]);\n\t\tthis.kill();\n\t}\n});\nexports.notification = NotificationInputView;\n\nconst BanInputView = InputBoxView.extend({\n\ttype: 'ban',\n\trenderInput() {\n\t\tlet html = '';\n\t\tfor (let field of ['days', 'hours', 'minutes']) {\n\t\t\thtml += parseHTML `<input ${{\n\t\t\t\ttype: 'number',\n\t\t\t\tplaceholder: lang.mod.placeholders[field]\n\t\t\t}}>`\n\t\t}\n\t\thtml += parseHTML `<input ${{\n\t\t\ttype: 'text',\n\t\t\tsize: 25,\n\t\t\tplaceholder: lang.mod.placeholders.reason\n\t\t}}>`;\n\t\tconst [label, title] = lang.mod.displayBan;\n\t\thtml += parseHTML\n\t\t\t`<label ${{title}}>\n\t\t\t\t<input type=\"checkbox\">\n\t\t\t\t${label}\n\t\t\t</label>`;\n\t\treturn html;\n\t},\n\thandler(info) {\n\t\t// Ensure reason field is filled\n\t\tif (!info[3])\n\t\t\treturn this.renderReasonPrompt();\n\t\t\n\t\t// Coerce time units and checkbox value to integers\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tinfo[i] = +info[i];\n\t\t}\n\t\tinfo[4] = +info[4];\n\t\tfor (let num of util.getSelected()) {\n\t\t\tmain.send([common.BAN, num, ...info]);\n\t\t}\n\t\tthis.kill();\n\t},\n\trenderReasonPrompt() {\n\t\tthis.$el.find('.reasonPrompt').remove();\n\t\tthis.$el\n\t\t\t.append(parseHTML\n\t\t\t\t`<b class=\"reasonPrompt admin\">\n\t\t\t\t\t${lang.mod.needReason}\n\t\t\t\t</b>`)\n\t\t\t.find('input[type=text]').focus();\n\t}\n});\nexports.ban = BanInputView;\n"],"sourceRoot":"/source/"}