{"version":3,"sources":["posts/render/image.js"],"names":["System","register","_export","_context","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","readableFilesize","size","Math","round","toString","slice","hiddenToggle","reveal","options","get","parseHTML","_templateObject3","lang","imageSearch","data","html","indexOf","ext","searchTemplates","google","_engine","thumbPath","mid","imagePaths","type","imageLink","name","_imgnm","imgnm","m","match","fullName","escape","tooLong","length","attrs","href","config","SECONDARY_MEDIA_URL","src","rel","download","title","_templateObject5","parseAttributes","spoilerInfo","_ref","largeThumb","spoiler","thumb","spoil","dims","images","commaList","_slicedToArray","_templateObject","_templateObject2","_templateObject4","_templateObject6","setters","_lang","_state","_underscore","_options","_util","execute","renderImage","showThumb","renderFigcaption","hat","renderThumbnail","list","audio","apng","undefined","_data$dims","thumbWidth","thumbHeight","sp","linkAttrs","target","imgAttrs","width","height","this","thumbStyle","style","sliceIterator","arr","i","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","err","Array","isArray","TypeError","models","engine","url","symbol","templates","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","_step$value","class","_iterator"],"mappings":"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","file":"posts/render/image.js","sourcesContent":["/*\n Image thumbnail HTML rendering\n*/\n\nimport lang from 'lang'\nimport {config} from '../../state'\nimport {escape} from 'underscore'\nimport options from '../../options'\nimport {parseHTML, commaList} from '../../util'\n\n// Render a thumbnail of an image, according to configuration settings\nexport function renderImage(data, reveal) {\n\tconst showThumb = options.get(\"thumbs\") !== 'hide' || reveal\n\treturn parseHTML\n\t\t`<figure>\n\t\t\t${renderFigcaption(data, reveal)}\n\t\t\t${config.images.hat && showThumb ? '<span class=\"hat\"></span>': ''}\n\t\t\t${showThumb ? renderThumbnail(data) : ''}\n\t\t</figure>`\n}\n\n// Render the information caption above the image\nexport function renderFigcaption(data, reveal) {\n\tconst list = commaList([\n\t\tdata.audio ? '\\u266B' : '',\n\t\tdata.length,\n\t\treadableFilesize(data.size),\n\t\t`${data.dims[0]}x${data.dims[1]}`,\n\t\tdata.apng ? 'APNG' : ''\n\t])\n\treturn parseHTML\n\t\t`<figcaption>\n\t\t\t${hiddenToggle(reveal)}\n\t\t\t${imageSearch(data)}\n\t\t\t<span>\n\t\t\t\t(${list})\n\t\t\t</span>\n\t\t\t${imageLink(data)}\n\t\t</figcaption>`\n}\n\n// Renders a human readable file size string\nfunction readableFilesize(size) {\n\tif (size < 1024) {\n\t\treturn size + ' B'\n\t}\n\tif (size < 1048576) {\n\t\treturn Math.round(size / 1024) + ' KB'\n\t}\n\tsize = Math.round(size / 104857.6).toString()\n\treturn size.slice(0, -1) + '.' + size.slice(-1) + ' MB'\n}\n\n// Render the button for toggling hidden thumbnails\nfunction hiddenToggle(reveal) {\n\tif (options.get('thumbs') !== 'hide') {\n\t\treturn ''\n\t}\n\treturn parseHTML\n\t\t`<a class=\"imageToggle\">\n\t\t\t[${lang[reveal ? 'hide' : 'show']}]\n\t\t</a>`\n}\n\n// Base URLs of image addresses\nconst imagePaths = {\n\tsrc: '/img/src/',\n\tthumb: '/img/thumb/',\n\tmid: '/img/mid/',\n\tspoil: '/ass/spoil/spoiler'\n}\n\n// Generate template functions for each image search engine\nconst searchTemplates = (function() {\n\tconst models = [\n\t\t{\n\t\t\tengine: 'google',\n\t\t\turl: 'https://www.google.com/searchbyimage?image_url=',\n\t\t\ttype: 'thumb',\n\t\t\tsymbol: 'G'\n\t\t},\n\t\t{\n\t\t\tengine: 'iqdb',\n\t\t\turl: 'http://iqdb.org/?url=',\n\t\t\ttype: 'thumb',\n\t\t\tsymbol: 'Iq'\n\t\t},\n\t\t{\n\t\t\tengine: 'saucenao',\n\t\t\turl: 'http://saucenao.com/search.php?db=999&url=',\n\t\t\ttype: 'thumb',\n\t\t\tsymbol: 'Sn'\n\t\t},\n\t\t{\n\t\t\tengine: 'desustorage',\n\t\t\ttype: 'MD5',\n\t\t\turl: 'https://desustorage.org/_/search/image/',\n\t\t\tsymbol: 'Ds'\n\t\t},\n\t\t{\n\t\t\tengine: 'exhentai',\n\t\t\ttype: 'SHA1',\n\t\t\turl: 'http://exhentai.org/?fs_similar=1&fs_exp=1&f_shash=',\n\t\t\tsymbol: 'Ex'\n\t\t}\n\t]\n\n\tconst templates = {}\n\tfor (let {engine, url, type, symbol} of models) {\n\t\tconst attrs = {\n\t\t\ttarget: '_blank',\n\t\t\trel: 'nofollow',\n\t\t\tclass: 'imageSearch ' + engine\n\t\t}\n\t\ttemplates[engine] = data => {\n\t\t\tif (!options.get(engine)) {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t\tattrs.href = url+ (type === 'thumb' ? thumbPath(data) : data[type])\n\t\t\treturn parseHTML\n\t\t\t\t`<a ${parseAttributes(attrs)}>\n\t\t\t\t\t${symbol}\n\t\t\t\t</a>`\n\t\t}\n\t}\n\n\treturn templates\n})()\n\n// Render image search links in accordance to client settings\nfunction imageSearch(data) {\n\tlet html = ''\n\n\t// Only render google for PDFs and MP3s\n\tif (['.pdf', '.mp3'].indexOf(data.ext) > -1) {\n\t\tif (options.get(\"google\")) {\n\t\t\treturn searchTemplates.google(data)\n\t\t}\n\t\treturn ''\n\t}\n\tfor (let engine in searchTemplates) {\n\t\thtml += searchTemplates[engine](data)\n\t}\n\treturn html\n}\n\n// Get the thumbnail path of an image, accounting for not thumbnail of specific\n// type being present\nfunction thumbPath(data, mid) {\n\treturn imagePaths[type] + data[mid && data.mid ? 'mid' : 'thumb']\n}\n\n// Render a name + download link of an image\nfunction imageLink(data) {\n\tlet name = '',\n\t\t{imgnm} = imgnm\n\tconst m = imgnm.match(/^(.*)\\.\\w{3,4}$/);\n\tif (m) {\n\t\tname = m[1]\n\t}\n\tconst fullName = escape(imgnm),\n\t\ttooLong = name.length >= 38\n\tif (tooLong) {\n\t\timgnm = escape(name.slice(0, 30))\n\t\t\t+ '(&hellip;)'\n\t\t\t+ escape(data.ext)\n\t}\n\tconst attrs = {\n\t\thref: `${config.SECONDARY_MEDIA_URL}src/${data.src}`,\n\t\trel: 'nofollow',\n\t\tdownload: fullName\n\t}\n\tif (tooLong) {\n\t\tattrs.title = fullName\n\t}\n\treturn parseHTML\n\t\t`<a ${parseAttributes(attrs)}>\n\t\t\t${imgnm}\n\t\t</a>`\n}\n\n// Render a hat on top of the thumbnail, if enabled\nfunction renderHat(showThumb) {\n\tif (showThumb && config.images.hats) {\n\t\treturn '<span class=\"hat\"></span>'\n\t}\n\treturn ''\n}\n\n// Render the actual thumbnail image\nexport function renderThumbnail(data, href) {\n\tlet src = imagePaths.src + data.src,\n\t\tthumb,\n\t\t[width, height, thumbWidth, thumbHeight] = data.dims\n\n\tif (data.spoiler && options.get('spoilers')) {\n\t\t// Spoilered and spoilers enabled\n\t\tconst sp = spoilerInfo(data)\n\t\tthumb = sp.thumb\n\t\tthumbWidth = sp.dims[0]\n\t\tthumbHeight = sp.dims[1]\n\t} else if (data.ext === '.gif' && options.get('autogif')) {\n\t\t// Animated GIF thumbnails\n\t\tthumb = src\n\t} else {\n\t\tthumb = thumbPath(data, options.get('thumbs') !== 'small')\n\t}\n\n\tconst linkAttrs = {\n\t\ttarget: '_blank',\n\t\trel: 'nofollow',\n\t\thref: href || src\n\t}\n\tconst imgAttrs = {\n\t\tsrc: thumb,\n\t\twidth: thumbWidth,\n\t\theight: thumbHeight\n\t}\n\n\t// Catalog pages\n\tif (href) {\n\t\t// Handle the thumbnails with the HTML5 History controller\n\t\tlinkAttrs.class = 'history'\n\n\t\t// No image hover previews\n\t\timgAttrs.class = 'expanded'\n\t\tif(this.thumbStyle == 'hide') {\n\t\t\timgAttrs.style = 'display: none'\n\t\t}\n\t}\n\n\treturn parseHTML\n\t\t`<a ${parseAttributes(linkAttrs)}>\n\t\t\t<img ${parseAttributes(imgAttrs)}>\n\t\t</a>`\n}\n\n// Parse and return image spoiler information\nfunction spoilerInfo({largeThumb, spoiler}) {\n\tlet thumb = imagePaths.spoil\n\tif (largeThumb || options.get(\"thumbs\") !== 'small') {\n\t\tthumb += 's'\n\t}\n\thtml += spoiler + '.png'\n\treturn {\n\t\tthumb,\n\t\tdims: config.images.thumb[largeThumb ? 'midDims' : 'thumbDims']\n\t}\n}\n"],"sourceRoot":"/source/"}