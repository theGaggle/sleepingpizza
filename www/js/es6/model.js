'use strict';System.register(['underscore','./view','./collection'],function(_export,_context){var extend,View,Collection;return {setters:[function(_underscore){extend=_underscore.extend;},function(_view){View=_view.default;},function(_collection){Collection=_collection.default;}],execute:function(){class Model{constructor(){let attrs=arguments.length<=0||arguments[0]===undefined?{}:arguments[0];this.attrs=attrs;this.views=[];this.changeHooks={};}get(key){return this.attrs[key];}set(key,val){this.attrs[key]=val;this.execChangeHooks(key);}setAttrs(attrs){extend(this.attrs,attrs);for(let key in attrs){this.execChangeHooks(key);}}append(key,val){if(this.attrs[key]){this.attrs[key].push(val);}else {this.attrs[key]=[val];}this.execChangeHooks(key);}extend(key,object){if(this.attrs[key]){extend(this.attrs[key],object);}else {this.attrs[key]=object;}this.execChangeHooks(key);}attach(view){this.views.push(view);}detach(view){this.views.splice(this.views.indexOf(view),1);}remove(){if(this.collection){this.collection.remove(this);}for(let view of this.views){view.remove();}}onChange(key,func){if(this.changeHooks[key]){this.changeHooks[key].push(func);}else {this.changeHooks[key]=[func];}}execChangeHooks(key){if(!this.changeHooks[key]){return;}const val=this.get(key);for(let func of this.changeHooks[key]){func(val);}}}_export('default',Model);}};});
//# sourceMappingURL=maps/model.js.map
