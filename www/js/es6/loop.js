'use strict';System.register([],function(_export,_context){return {setters:[],execute:function(){const main=require('./main');const util=main.util;const follow=main.follow;const options=main.options;const oneeSama=main.oneeSama;const posts=main.state.posts;options.on({'change:thumbs':reRenderImages,'change:spoilers':toggleSpoilers,'change:autogif':toggleAutoGIF,'change:anonymise':toggleAnonymisation,'workModeTOG':reRenderImages});function reRenderImages(){if(main.state.page.get('catalog')){const show=options.get("thumbs")!=='hide'&&!main.oneeSama.workMode?'':'none';document.queryAll(".expanded").forEach(el => el.style.display=show);}else follow(() => getImages((image,model) => image&&model.dispatch('renderImage',image)));}function getImages(func){posts.each(model => func(model.get('image'),model));}function toggleSpoilers(){follow(() => getImages((image,model) => image&&image.spoiler&&model.dispatch('renderImage',image)));}function toggleAutoGIF(){follow(() => getImages((image,model) => image&&image.ext==='.gif'&&model.dispatch('renderImage',image)));}function toggleAnonymisation(source,toggle){follow(() => {const command=toggle?'anonymise':'renderName';posts.each(function(model){var _model$attributes=model.attributes;const name=_model$attributes.name;const trip=_model$attributes.trip;if(name||trip)model.dispatch(command);});});}main.reply('loop:anonymise',() => options.get('anonymise')&&toggleAnonymisation(null,true));}};});
//# sourceMappingURL=maps/loop.js.map
