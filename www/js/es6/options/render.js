'use strict';System.register(['../../vendor/underscore','../util','./opts','lang'],function(_export,_context){var filter,parseHTML,parseAttributes,options,ln;return {setters:[function(_vendorUnderscore){filter=_vendorUnderscore.filter;},function(_util){parseHTML=_util.parseHTML;parseAttributes=_util.parseAttributes;},function(_opts){options=_opts.default;},function(_lang){ln=_lang.default;}],execute:function(){var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally {try{if(!_n&&_i["return"])_i["return"]();}finally {if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else {throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();const lang=ln.opts;_export('default',function(){let html='<ul class="option_tab_sel">';const tabs=lang.tabs;const opts=[];for(let i=0;i<tabs.length;i++){opts[i]=filter(options,opt => opt.tab===i&&(opt.load===undefined||opt.load)&&!opt.hidden);if(!opts[i].length){continue;}const attrs={'data-content':`tab-${ i }`,class:'tab_link'};if(i===0){attrs.class+=' tab_sel';}html+=parseHTML`<li>
				<a ${ parseAttributes(attrs) }>
					${ tabs[i] }
				</a>
			</li>`;}html+='</ul><ul class="option_tab_cont">';for(let i=0;i<opts.length;i++){html+=renderTab(opts[i],i);}html+='</ul>';return html;});function renderTab(opts,i){if(!opts.length){return '';}let html="";html+=`<li class="tab-${ i }`;if(i===0){html+=' tab_sel';}html+='">';for(let opt of opts){html+=renderOption(opt);}if(i===0){html+=renderExtras();}html+='</li>';return html;}function renderOption(opt){let html='';const isShortcut=opt.type==='shortcut',isList=opt.type instanceof Array,isCheckbox=opt.type==='checkbox'||opt.type===undefined,isNumber=opt.type==='number',isImage=opt.type==='image';if(isShortcut){html+='Alt+';}if(!isList){html+='<input';if(isCheckbox||isImage)html+=` type="${ isCheckbox?'checkbox':'file' }"`;else if(isNumber)html+=' style="width: 4em;" maxlength="4"';else if(isShortcut)html+=' maxlength="1"';}else {html+='<select';}var _lang$labels$opt$id=_slicedToArray(lang.labels[opt.id],2);const label=_lang$labels$opt$id[0];const title=_lang$labels$opt$id[1];html+=` id="${ opt.id }" title="${ title }">`;if(isList){for(let item of opt.type){html+=parseHTML`<option value="${ item }">
					${ lang.modes[item]||item }
				</option>`;}html+='</select>';}html+=parseHTML`<label for="${ opt.id }" title="${ title }">
			${ label }
		</label>
		<br>`;return html;}function renderExtras(){let html='<br>';const links=['export','import','hidden'];for(let id of links){var _lang$labels$id=_slicedToArray(lang.labels[id],2);const label=_lang$labels$id[0];const title=_lang$labels$id[1];html+=parseHTML`<a id="${ id }" title="${ title }">
				${ label }
			</a> `;}const attrs={type:'file',id:'importSettings',name:"Import Settings"};html+=`<input ${ parseAttributes(attrs) }>`;return html;}}};});
//# sourceMappingURL=../maps/options/render.js.map
