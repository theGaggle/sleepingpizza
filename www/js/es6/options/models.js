'use strict';System.register(['underscore','../options','./opts'],function(_export,_context){var extend,options,opts;return {setters:[function(_underscore){extend=_underscore.extend;},function(_options){options=_options.default;},function(_opts){opts=_opts.default;}],execute:function(){const optionModels={};_export('default',optionModels);class OptionModel{constructor(model){if(model.load!==undefined&&!model.load){return;}extend(this,model);if(!this.type){this.type='checkbox';}const val=options.attrs[this.id]=this.get();options.onChange(this.id,val => this.onChange(val));if(this.execOnStart!==false){this.execute(val);}optionModels[this.id]=this;}read(){return localStorage[this.id]||"";}get(){const stored=this.read();if(!stored){return this.default;}else {if(stored==='false'){return false;}if(stored==="true"){return true;}const num=parseInt(stored,10);if(num||num===0){return num;}return this.default;}}onChange(val){this.execute(val);this.set(val);}execute(val){if(this.exec){this.exec(val);}}set(val){if(val!==this.default||this.read()){localStorage.setItem(this.id,val.toString());}}validate(val){if(this.validation){return this.validation(val);}return true;}}for(let spec of opts){new OptionModel(spec);}}};});
//# sourceMappingURL=../maps/options/models.js.map
