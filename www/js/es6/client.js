'use strict';System.register([],function(_export,_context){return {setters:[],execute:function(){var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally {try{if(!_n&&_i["return"])_i["return"]();}finally {if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else {throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();const main=require('./main');const _=main._;const common=main.common;const dispatcher=main.dispatcher;const util=main.util;const posts=main.posts;const state=main.state;const online=document.query('#onlineCount');_.extend(dispatcher,{[common.INSERT_POST](message){var _message=_slicedToArray(message,2);let msg=_message[0];let bump=_message[1];bump=bump&&state.page.get('live');const isThread=!msg.op;const num=msg.num;if(isThread)state.syncs[num]=1;msg.editing=true;let el;const nonce=msg.nonce;delete msg.nonce;const myNonce=main.request('nonce:get')[nonce];if(myNonce&&myNonce.tab===state.page.get('tabID')){state.ownPosts[num]=true;main.oneeSama.trigger('insertOwnPost',msg);main.postSM.feed('alloc',msg);bump=false;main.request('nonce:destroy',nonce);const postForm=main.request('postForm');if(postForm&&postForm.el)el=postForm.el;}if(myNonce){msg.mine=true;state.mine.write(num);}state.addLinks(msg.links);const model=new posts.models[isThread?'Thread':'Post'](msg);const view=new posts[isThread?'Section':'Article']({model,el,id:num});if(!el)view.render().insertIntoDOM();view.clientInit();checkRepliedToMe(msg.links,num);main.request('post:inserted',model);if(isThread)return;const parent=state.posts.get(msg.op);if(!parent)return;parent.get('replies').push(num);if(state.page.get('thread'))return;parent.dispatch('shiftReplies');if(bump)parent.dispatch('bumpThread');},[common.INSERT_IMAGE](msg){var _msg=_slicedToArray(msg,2);const num=_msg[0];const img=_msg[1];const postModel=main.request('postModel'),toPostForm=postModel&&postModel.get('num')==num;if(toPostForm)main.request('postForm').insertUploaded(img);modelHandler(num,model => model.setImage(img,toPostForm));},[common.UPDATE_POST](_ref){var _ref2=_slicedToArray(_ref,3);let num=_ref2[0];let frag=_ref2[1];var _ref2$=_ref2[2];let extra=_ref2$===undefined?{}:_ref2$;modelHandler(num,model => {state.addLinks(extra.links);model.update(frag,extra);checkRepliedToMe(extra.links,num);if(num in state.ownPosts)main.oneeSama.trigger('insertOwnPost',extra);else model.dispatch('updateBody',frag);});},[common.FINISH_POST](msg){var _msg2=_slicedToArray(msg,1);const num=_msg2[0];delete state.ownPosts[num];modelHandler(num,function(model){model.set('editing',false);model.dispatch('renderEditing',false);});},[common.DELETE_POSTS](msg){modelHandler(msg[0],model => model.deletePost(msg[1]));},[common.LOCK_THREAD](msg){modelHandler(msg[0],model => model.toggleLocked(true,msg[1]));},[common.UNLOCK_THREAD](msg){modelHandler(msg[0],model => model.toggleLocked(false,msg[1]));},[common.DELETE_IMAGES](msg){modelHandler(msg[0],model => model.removeImage(msg[1]));},[common.SPOILER_IMAGES](msg){modelHandler(msg[0],model => model.setSpoiler(msg[1],msg[2]));},[common.BAN](msg){var _msg3=_slicedToArray(msg,2);let num=_msg3[0];let info=_msg3[1];if(!num){if(!info)return;info=JSON.parse(info);num=info.num;}modelHandler(num,model => model.setBan(num,info));},[common.BACKLINK](msg){modelHandler(msg[0],model => model.addBacklink(msg[1],msg[2]));},[common.ONLINE_COUNT](msg){online.textContent='['+msg[0]+']';},[common.HOT_INJECTION](msg){var _msg4=_slicedToArray(msg,3);const force=_msg4[0];const hash=_msg4[1];const hotConfig=_msg4[2];if(!force&&hash!==state.configHash)main.send([common.HOT_INJECTION,true]);else if(force){state.configHash=hash;state.hotConfig.set(hotConfig);}}});dispatcher[common.SYNCHRONIZE]=main.connSM.feeder('sync');dispatcher[common.INVALID]=main.connSM.feeder('invalid');function checkRepliedToMe(links,sourceNum){if(!links)return;const mine=state.mine.readAll();for(let num in links){if(num in mine)main.request('repliedToMe',sourceNum);}}function modelHandler(num,func){const model=state.posts.get(num);if(model)func(model);}util.listener(document,'click','del',function(event){if(event.spoilt)return;event.spoilt=true;event.target.classList.toggle('reveal');});}};});
//# sourceMappingURL=maps/client.js.map
