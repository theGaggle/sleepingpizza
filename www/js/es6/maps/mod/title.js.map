{"version":3,"sources":["mod/title.js"],"names":[],"mappings":";;;qcA8BoB,qSAUW","file":"mod/title.js","sourcesContent":["/*\nToggle and preview staff titles on new posts\n */\n\nconst main = require('main'),\n\t{etc, lang, state} = main,\n\t{auth} = main.ident;\n\n// Insert toggler checkbox into name form\nmain.$name.after(main.common.parseHTML\n\t`<label title=\"${lang.mod.title[1]}\" class=\"mod\">\n\t\t<input type=\"checkbox\" id=\"authName\">\n\t\t ${lang.mod.title[0]}\n\t </label>`);\n\nconst $authName = main.$('#authName');\n\n// Preview the title in postForm\nmain.oneeSama.hook('fillMyName', el => {\n\tconst checked = $authName[0].checked;\n\tif (checked) {\n\t\tel.classList.add(auth === 'admin' ? 'admin' : 'moderator');\n\t\tel.append(document.createTextNode(' ## '\n\t\t\t+ state.hotConfig.get('staff_aliases')[auth]));\n\t}\n});\n$authName.change(() => main.request('postForm:indentity'));\n\n// Extend default allocation request\noverride(main.posts.posting.ComposerView.prototype, 'allocationMessage',\n\tfunction (orig, ...args) {\n\t\tconst msg = orig.call(this, ...args);\n\t\tif ($authName[0].checked)\n\t\t\tmsg.auth = auth;\n\t\treturn msg;\n\t});\n\n// Override a method on an object with a new method\nfunction override(parent, method, upgrade) {\n\tconst orig = parent[method];\n\tparent[method] = function (...args) {\n\t\treturn upgrade.call(this, orig, ...args);\n\t}\n}\n"],"sourceRoot":"/source/"}