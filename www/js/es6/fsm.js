'use strict';System.register([],function(_export,_context){return {setters:[],execute:function(){class FSM{constructor(start){this.state=start;this.spec={acts:{},ons:{},wilds:{},preflights:{}};}clone(){const second=new FSM(this.state);second.spec=this.spec;return second;}on(key,f){const ons=this.spec.ons[key];if(ons){ons.push(f);}else {this.spec.ons[key]=[f];}}preflight(key,f){const pres=this.spec.preflights[key];if(pres){pres.push(f);}else {this.spec.preflights[key]=[f];}}act(trans_spec,on_func){const halves=trans_spec.split('->');if(halves.length!=2){throw new Error("Bad FSM spec: "+trans_spec);}const parts=halves[0].split(','),dest=halves[1].match(/^\s*(\w+)\s*$/)[1];let tok;for(let i=parts.length-1;i>=0;i--){const part=parts[i],m=part.match(/^\s*(\*|\w+)\s*(?:\+\s*(\w+)\s*)?$/);if(!m){throw new Error("Bad FSM spec portion: "+part);}if(m[2]){tok=m[2];}if(!tok){throw new Error("Tokenless FSM action: "+part);}const src=m[1];if(src=='*'){this.spec.wilds[tok]=dest;}else {let acts=this.spec.acts[src];if(!acts){this.spec.acts[src]=acts={};}acts[tok]=dest;}}if(on_func){this.on(dest,on_func);}}feed(ev,param){const spec=this.spec;const from=this.state;const acts=spec.acts[from];const to=acts&&acts[ev]||spec.wilds[ev];if(to&&from!=to){const ps=spec.preflights[to];for(let i=0;ps&&i<ps.length;i++){if(!ps[i].call(this,param)){return false;}}this.state=to;const fs=spec.ons[to];for(let i=0;fs&&i<fs.length;i++){fs[i].call(this,param);}}return true;}feeder(ev){return param => this.feed(ev,param);}}_export('default',FSM);}};});
//# sourceMappingURL=maps/fsm.js.map
